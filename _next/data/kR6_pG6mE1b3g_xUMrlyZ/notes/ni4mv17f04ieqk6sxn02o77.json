{"pageProps":{"note":{"id":"ni4mv17f04ieqk6sxn02o77","title":"Fundamentals","desc":"","updated":1649609418446,"created":1648899620451,"custom":{},"fname":"learning.react.fundamentals","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"547d0eb9ad1f1c5a3302044b6cf98aab","links":[{"type":"wiki","from":{"fname":"learning.react.fundamentals","id":"ni4mv17f04ieqk6sxn02o77","vaultName":"Harshita-notes"},"value":"tags.learn","alias":"#learn","position":{"start":{"line":27,"column":20,"offset":1241},"end":{"line":27,"column":26,"offset":1247},"indent":[]},"xvault":false,"to":{"fname":"tags.learn"}}],"anchors":{"react":{"type":"header","text":"React","value":"react","line":8,"column":0,"depth":2},"functional-components-over-class":{"type":"header","text":"Functional components over Class","value":"functional-components-over-class","line":16,"column":0,"depth":2},"react-state-vs-props":{"type":"header","text":"React State vs Props","value":"react-state-vs-props","line":26,"column":0,"depth":2},"todo":{"type":"header","text":"TODO","value":"todo","line":32,"column":0,"depth":2}},"children":[],"parent":"8fp89ktw3fhi2p6bt35b5ju","data":{}},"body":"<h1 id=\"fundamentals\">Fundamentals<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#fundamentals\"></a></h1>\n<h2 id=\"react\">React<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#react\"></a></h2>\n<p>A JS library for building User interfaces.</p>\n<ul>\n<li>uses Virtual DOM</li>\n<li>unindirectional data flow</li>\n<li>reusable UI components</li>\n</ul>\n<h2 id=\"functional-components-over-class\">Functional components over Class<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#functional-components-over-class\"></a></h2>\n<ul>\n<li>use functional comp over class, after 16.8 hooks can be used as lifecycle events.</li>\n<li>use class component when you want a react functionality that is not availabke for functions yet, eg: error boundries</li>\n<li>Only class components can be error boundaries. To make class component an error boundary we define a new lifecycle method called componentDidCatch(error, info).</li>\n</ul>\n<p>ReactDOM.render function: takes 2 i/p</p>\n<ul>\n<li>App</li>\n<li>document.getElementById(\"root\")</li>\n</ul>\n<h2 id=\"react-state-vs-props\">React State vs Props<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#react-state-vs-props\"></a></h2>\n<ul>\n<li>State of a component is an object that holds some information that may change over the lifetime of the component.</li>\n<li>props are inputs to a component, They are data passed down from a parent component to a child component.</li>\n</ul>\n<p>Both props and state are plain JavaScript objects. While both of them hold information that influences the output of render, they are different in their functionality with respect to component. Props get passed to the component similar to function parameters whereas state is managed within the component similar to variables declared within a function.</p>\n<h2 id=\"todo\">TODO<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#todo\"></a></h2>\n<ul>\n<li>React.StrictMode <a class=\"color-tag\" style=\"--tag-color: #fbeeac;\" href=\"/Harshita-notes/notes/gnxywb70sldsrsabn47cn3z\">#learn</a></li>\n</ul>","noteIndex":{"id":"dlb5bmx7v8f6otsgongz4vx","title":"Hi","desc":"","updated":1663067414354,"created":1648190029829,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"6b76a01b6637801a4ce24670d1dc2271","links":[],"anchors":{"contacts":{"type":"header","text":"Contacts","value":"contacts","line":15,"column":0,"depth":2}},"children":["trkx8xrg7g2fm023ez4ldqj","c8csxid3zoghxorepwcrami","urj8q1uq98o3upmgbt2qxns","lui2tfqk0as7k6dv2o4mot5","jny7pb2gix67ie205d74uha","u67smi2ezoezpz9v5p7rwz8"],"parent":null,"data":{},"body":"\nHi,\nWelcome to Harshita's Digital Garden ðŸŒ±\nI'm Harshita Joshi. I'm a software engineer who also has a passion for teaching.\nWhen not at the computer, I play ukulele, do yoga, study [German](https://harshita-mindfire.github.io/german-for-beginners/) and wonder about having numerous pets.\n\nEven though I don't travel very often, I try to capture the city's charm through photographs. Click [here](https://harshita-mindfire.github.io/) to see a glimpse of my gallery.\n\n## Contacts\nYou can find and contact me in the following places\n\n* Email: tharshita13@gmail.com\n\n* Github: [Harshita-mindfire](https://github.com/Harshita-mindfire)\n\n* LinkedIn: [Harshita Joshi](https://www.linkedin.com/in/harshita-joshi-030b29118/)\n\n* Instagram: [imharshita07](https://www.instagram.com/imharshita07/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true,"enableEngineV3":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Digital Garden","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://Harshita-mindfire.github.io","assetsPrefix":"/Harshita-notes","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}